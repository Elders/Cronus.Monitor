trigger:
    branches:
      include:
      - master
      - preview
      - release-*
    paths:
      exclude:
      - CHANGELOG.md
resources:
  repositories:
  - repository: Configrepo
    type: github
    endpoint: OneBigSplash
    name: OneBigSplash/LifestylePlatform.Configuration
pr: none
stages:
 - stage: Build
   displayName: Build
   jobs:
    - job: Build
      displayName: Build Job
      pool:
        vmImage: 'ubuntu-latest'

      variables:
        buildConfiguration: 'Release'

      steps:
        - checkout: self
          clean: true
          persistCredentials: true

        - task: UseDotNet@2
          displayName: 'Use .NET 9 Core sdk'
          enabled: true
          inputs:
            packageType: sdk
            version: 9.0.x
            installationPath: $(Agent.ToolsDirectory)/dotnet

        - task: DotNetCoreCLI@2
          name: Publish_Api
          enabled: true
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: 'Cronus.Monitor/Cronus.Monitor/Cronus.Monitor.Api.csproj'
            arguments: '/p:Configuration=Release --output $(Build.ArtifactStagingDirectory)/api'
            zipAfterPublish: false
            modifyOutputPath: false

        - task: Bash@3
          name: Release
          env:
            STAGING_PATH: $(Build.ArtifactStagingDirectory)
            LOCAL_PATH: $(Build.Repository.LocalPath)
            DOCKER_HUB_PASSWORD: $(DOCKER_HUB_PASSWORD)
          inputs:
            targetType: 'inline'
            script: |
              time curl -L https://github.com/Elders/blob/releases/download/SemRel-01/node_modules.tar.gz | tar -xzv
              RELEASE_OUTPUT=$(npx semantic-release --no-ci)
              echo "$RELEASE_OUTPUT"
              if [[ "$RELEASE_OUTPUT" == *"Published"* ]]; then
                echo "##vso[task.setvariable variable=Released;isOutput=true]true"
              else
                echo  "##vso[task.setvariable variable=Released;isOutput=true]false"
              fi
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: 'ci'
            artifact: 'manifest'
            publishLocation: 'pipeline'

 - stage: Build_conf
   displayName: Build_conf
   jobs:
    - job: Build_conf
      displayName: Build Job
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - checkout: Configrepo
        persistCredentials: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)/Cronus.Monitor/src/Cronus.Monitor.configuration/public'
          ArtifactName: 'cronus.monitor'
          publishLocation: 'Container'
 - stage: Deploy
   displayName: Deploy Stage
   condition:  and(succeeded(), eq(dependencies.Build.outputs['Build.Release.Released'], 'true'))
   jobs:
    - job: Deploy
      displayName: Deploy Job
      pool:
        vmImage: 'ubuntu-22.04'
      steps:

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'specific'
          project: 'UniCom'
          definition: 'Elders.devops'
          buildVersionToDownload: 'latest'
          artifactName: 'edo'
          downloadPath: '$(System.DefaultWorkingDirectory)/_edo'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          buildVersionToDownload: 'latest'
          artifactName: 'cronus.monitor'
          downloadPath: '$(System.DefaultWorkingDirectory)/_OneBigSplash.Unicom.Monitor'
      - bash: |
          set -e
          cd $(System.DefaultWorkingDirectory)/_OneBigSplash.Unicom.Monitor/cronus.monitor
          tar -cvf ../../conf-d.tar .
      - task: Kubernetes@1
        inputs:
          kubernetesServiceEndpoint: 'integration-cluster'
          namespace: unicom
          command: create
          arguments: 'configmap unicom-monitor --from-file=conf-d.tar'
          forceUpdateConfigMap: true
          outputFormat: 'jsonpath-as-json={.metadata}'
           
      - task: Kubernetes@1
        displayName: 'kubectl run Pandora Job'
        inputs:
          kubernetesServiceEndpoint: 'integration-cluster'
          namespace: unicom
          command: run
          arguments: 'pandora --image elders/pandora.cli --restart Never --generator job/v1 --overrides {"\"apiVersion\": \"batch/v1\",\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"pandora\",\"image\": \"elders/pandora.cli\",\"command\": [\"/bin/sh\", \"-c\", \"mkdir /confs && tar -xf /configs/conf-d.tar -C /confs/ && dotnet Pandora.Cli.dll open -d /confs -j cronus.monitor.api.json -m pandora-job -a Cronus.Monitor.Api -c int -o consul -h http://consul.unicom.internal:8500\"],\"volumeMounts\": [{\"mountPath\": \"/configs\",\"name\": \"configs\"}]}],\"volumes\": [{\"configMap\": {\"defaultMode\": 256,\"name\": \"unicom-monitor\",\"optional\": false},\"name\": \"configs\"}]}}}}'
          versionSpec: 1.15.0     
      - task: Kubernetes@1
        displayName: 'kubectl wait'
        inputs:
          kubernetesServiceEndpoint: 'integration-cluster'
          namespace: unicom
          command: wait
          arguments: '--timeout=300s --for=condition=complete job/pandora'
      - task: Kubernetes@1
        displayName: 'kubectl delete pandora job'
        inputs:
          kubernetesServiceEndpoint: 'integration-cluster'
          namespace: unicom
          command: delete
          arguments: 'job pandora'          
      - task: Kubernetes@1
        displayName: 'kubectl delete ConfigMap'
        inputs:
          kubernetesServiceEndpoint: 'integration-cluster'
          namespace: unicom
          command: delete
          arguments: 'configmap unicom-monitor'          
          azureContainerRegistry: 
      - task: Kubernetes@1
        name: _CONF
        inputs:
          kubernetesServiceEndpoint: 'integration-cluster'
          namespace: unicom
          command: config
          arguments: 'view --raw -v6'
          versionSpec: '1.24.2'          
      - bash: |
          set -e
          ### parameters are :
          ### conteiner_registry  namespace  deployment  container1 image1 container2 image2 ...
          bash $(System.DefaultWorkingDirectory)/_edo/edo/azure-devops/release-pipeline-set-image.v1.sh unicominternal.azurecr.io unicom unicom-monitor unicom-monitor unicom.monitor.api
 - stage: DeployToProd
   displayName: DeployToProdStage
   condition: succeeded()
   jobs:
    - deployment: DeployToProduction
      displayName: Deploy Job to Production
      environment: production
      pool:
        vmImage: 'ubuntu-22.04'
      strategy:
        runOnce:
          deploy:
            steps: 
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'specific'
                project: 'UniCom'
                definition: 'Elders.devops'
                buildVersionToDownload: 'latest'
                artifactName: 'edo'
                downloadPath: '$(System.DefaultWorkingDirectory)/_edo'
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                buildVersionToDownload: 'latest'
                artifactName: 'cronus.monitor'
                downloadPath: '$(System.DefaultWorkingDirectory)/_OneBigSplash.Unicom.Monitor'
            - bash: |
                set -e
                cd $(System.DefaultWorkingDirectory)/_OneBigSplash.Unicom.Monitor/cronus.monitor
                tar -cvf ../../conf-d.tar .
            - task: Kubernetes@1
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: create
                arguments: 'configmap unicom-monitor --from-file=conf-d.tar'
                forceUpdateConfigMap: true
                outputFormat: 'jsonpath-as-json={.metadata}'
                
            - task: Kubernetes@1
              displayName: 'kubectl run Pandora Job'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: run
                arguments: 'pandora --image elders/pandora.cli --restart Never --generator job/v1 --overrides {"\"apiVersion\": \"batch/v1\",\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"pandora\",\"image\": \"elders/pandora.cli\",\"command\": [\"/bin/sh\", \"-c\", \"mkdir /confs && tar -xf /configs/conf-d.tar -C /confs/ && dotnet Pandora.Cli.dll open -d /confs -j cronus.monitor.api.json  -m pandora-job -a Cronus.Monitor.Api -c pruvit -o consul -h http://10.0.0.13:8500\"],\"volumeMounts\": [{\"mountPath\": \"/configs\",\"name\": \"configs\"}]}],\"volumes\": [{\"configMap\": {\"defaultMode\": 256,\"name\": \"unicom-monitor\",\"optional\": false},\"name\": \"configs\"}]}}}}'
                versionSpec: 1.15.0     
                 
            - task: Kubernetes@1
              displayName: 'kubectl wait'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: wait
                arguments: '--timeout=300s --for=condition=complete job/pandora'
            - task: Kubernetes@1
              displayName: 'kubectl delete pandora job'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: delete
                arguments: 'job pandora'          
            - task: Kubernetes@1
              displayName: 'kubectl delete ConfigMap'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: delete
                arguments: 'configmap unicom-monitor'          
                azureContainerRegistry: 
            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: 'unicom'
                command: rollout  
                arguments: 'restart deployment/unicom-monitor -n unicom'
                versionSpec: '1.24.2'            

            - task: Kubernetes@1
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: create
                arguments: 'configmap unicom-monitor --from-file=conf-d.tar'
                forceUpdateConfigMap: true
                outputFormat: 'jsonpath-as-json={.metadata}'
                
            - task: Kubernetes@1
              displayName: 'kubectl run Pandora Job'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: run
                arguments: 'pandora --image elders/pandora.cli --restart Never --generator job/v1 --overrides {"\"apiVersion\": \"batch/v1\",\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"pandora\",\"image\": \"elders/pandora.cli\",\"command\": [\"/bin/sh\", \"-c\", \"mkdir /confs && tar -xf /configs/conf-d.tar -C /confs/ && dotnet Pandora.Cli.dll open -d /confs -j cronus.monitor.api.json  -m pandora-job -a Cronus.Monitor.Api -c prodrmq -o consul -h http://10.0.0.13:8500\"],\"volumeMounts\": [{\"mountPath\": \"/configs\",\"name\": \"configs\"}]}],\"volumes\": [{\"configMap\": {\"defaultMode\": 256,\"name\": \"unicom-monitor\",\"optional\": false},\"name\": \"configs\"}]}}}}'
                versionSpec: 1.15.0     
                 
            - task: Kubernetes@1
              displayName: 'kubectl wait'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: wait
                arguments: '--timeout=300s --for=condition=complete job/pandora'
            - task: Kubernetes@1
              displayName: 'kubectl delete pandora job'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: delete
                arguments: 'job pandora'          
            - task: Kubernetes@1
              displayName: 'kubectl delete ConfigMap'
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: delete
                arguments: 'configmap unicom-monitor'          
                azureContainerRegistry: 
            - task: Kubernetes@1
              name: _CONF
              inputs:
                kubernetesServiceEndpoint: 'pruvit-prd'
                namespace: unicom
                command: config
                arguments: 'view --raw -v6'
                versionSpec: '1.24.2'
            - bash: |
                set -e
                ### parameters are :
                ### conteiner_registry  namespace  deployment  container1 image1 container2 image2 ...
                bash $(System.DefaultWorkingDirectory)/_edo/edo/azure-devops/release-pipeline-set-image.v1.sh unicominternal.azurecr.io unicom unicom-monitor unicom-monitor unicom.monitor.api            

                